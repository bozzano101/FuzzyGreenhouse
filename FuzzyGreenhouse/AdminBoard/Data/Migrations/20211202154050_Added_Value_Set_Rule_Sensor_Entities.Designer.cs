// <auto-generated />
using System;
using AdminBoard.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AdminBoard.Data.Migrations
{
    [DbContext(typeof(FuzzyGreenhouseDbContext))]
    [Migration("20211202154050_Added_Value_Set_Rule_Sensor_Entities")]
    partial class Added_Value_Set_Rule_Sensor_Entities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("AdminBoard.Models.FuzzyGreenHouse.Rule", b =>
                {
                    b.Property<int>("RuleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("InputValue1ValueID")
                        .HasColumnType("int");

                    b.Property<int?>("InputValue2ValueID")
                        .HasColumnType("int");

                    b.Property<int>("Operator")
                        .HasColumnType("int");

                    b.Property<int?>("OutputValueValueID")
                        .HasColumnType("int");

                    b.Property<int?>("SensorID")
                        .HasColumnType("int");

                    b.HasKey("RuleID");

                    b.HasIndex("InputValue1ValueID");

                    b.HasIndex("InputValue2ValueID");

                    b.HasIndex("OutputValueValueID");

                    b.HasIndex("SensorID");

                    b.ToTable("Rule");
                });

            modelBuilder.Entity("AdminBoard.Models.FuzzyGreenHouse.Sensor", b =>
                {
                    b.Property<int>("SensorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("SensorID");

                    b.ToTable("Sensors");
                });

            modelBuilder.Entity("AdminBoard.Models.FuzzyGreenHouse.Set", b =>
                {
                    b.Property<int>("SetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int?>("SensorID")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("SetID");

                    b.HasIndex("SensorID");

                    b.ToTable("Set");
                });

            modelBuilder.Entity("AdminBoard.Models.FuzzyGreenHouse.Value", b =>
                {
                    b.Property<int>("ValueID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("SetID")
                        .HasColumnType("int");

                    b.Property<string>("ValueName")
                        .HasColumnType("longtext");

                    b.Property<string>("XCoords")
                        .HasColumnType("longtext");

                    b.Property<string>("YCoords")
                        .HasColumnType("longtext");

                    b.HasKey("ValueID");

                    b.HasIndex("SetID");

                    b.ToTable("Value");
                });

            modelBuilder.Entity("AdminBoard.Models.FuzzyGreenHouse.Rule", b =>
                {
                    b.HasOne("AdminBoard.Models.FuzzyGreenHouse.Value", "InputValue1")
                        .WithMany()
                        .HasForeignKey("InputValue1ValueID");

                    b.HasOne("AdminBoard.Models.FuzzyGreenHouse.Value", "InputValue2")
                        .WithMany()
                        .HasForeignKey("InputValue2ValueID");

                    b.HasOne("AdminBoard.Models.FuzzyGreenHouse.Value", "OutputValue")
                        .WithMany()
                        .HasForeignKey("OutputValueValueID");

                    b.HasOne("AdminBoard.Models.FuzzyGreenHouse.Sensor", "Sensor")
                        .WithMany("Rules")
                        .HasForeignKey("SensorID");

                    b.Navigation("InputValue1");

                    b.Navigation("InputValue2");

                    b.Navigation("OutputValue");

                    b.Navigation("Sensor");
                });

            modelBuilder.Entity("AdminBoard.Models.FuzzyGreenHouse.Set", b =>
                {
                    b.HasOne("AdminBoard.Models.FuzzyGreenHouse.Sensor", "Sensor")
                        .WithMany("Sets")
                        .HasForeignKey("SensorID");

                    b.Navigation("Sensor");
                });

            modelBuilder.Entity("AdminBoard.Models.FuzzyGreenHouse.Value", b =>
                {
                    b.HasOne("AdminBoard.Models.FuzzyGreenHouse.Set", "Set")
                        .WithMany("Values")
                        .HasForeignKey("SetID");

                    b.Navigation("Set");
                });

            modelBuilder.Entity("AdminBoard.Models.FuzzyGreenHouse.Sensor", b =>
                {
                    b.Navigation("Rules");

                    b.Navigation("Sets");
                });

            modelBuilder.Entity("AdminBoard.Models.FuzzyGreenHouse.Set", b =>
                {
                    b.Navigation("Values");
                });
#pragma warning restore 612, 618
        }
    }
}
